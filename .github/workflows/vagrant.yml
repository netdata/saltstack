---
# CI code for testing SaltStack Netdata scripts
name: SaltStack
on:
  push:
    branches:
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
       matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Dynamic Matrix
        id: setmatrix
        run: |
          import yaml
          x = {}
          with open('servers.yml') as fh:
            runs = []
            read_data = yaml.safe_load(fh)
            for i in read_data:
              if i['enable'] == True:
                s = {}
                s['image'] = i['name']
                runs.append(s)
          x['include'] = runs
          print(f'::set-output name=matrix::{x}')
        shell: python
  Test:
    name: Test Salt
    runs-on: macos-10.15
    needs: setup
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create ${{ matrix.image }}
        run: |
          (echo "### vagrant up - 1st attempt ###" && vagrant up ${{ matrix.image }}) || \
          (echo "### vagrant up - 2st attempt ###" && vagrant up ${{ matrix.image }}) || \
          (echo "### vagrant up - 3st attempt ###" && vagrant up ${{ matrix.image }}) || \
          (echo "### vagrant up - FAILED ###" && exit 1)
      - name: Run highstate on ${{ matrix.image }}
        run: |
          vagrant ssh ${{ matrix.image }} -- -t "sudo salt-call state.highstate --retcode-passthrough"
      - name: Cleanup
        if: always()
        run: |
          vagrant destroy ${{ matrix.image }} -f
